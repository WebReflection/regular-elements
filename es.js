self.regularElements=function(e){"use strict";const t=new Set,r=new MutationObserver(e=>{t.forEach(n,e)});function n(e){e(this,r)}r.observe(document,{subtree:!0,childList:!0}),t.observer=r;const o=new WeakMap,{observer:c}=t,a=e=>{for(let t=0,{length:r}=e;t<r;t++){const{target:r,attributeName:n,oldValue:c}=e[t],a=r.getAttribute(n);o.get(r).a[n].forEach(e=>{e.call(r,n,c,a)})}},s=(e,t)=>{for(let r=0,{length:n}=e;r<n;r++){const n=e[r];o.has(n)&&o.get(n)[t].forEach(d,n),s(n.children||[],t)}},i=e=>{for(let t=0,{length:r}=e;t<r;t++){const{addedNodes:r,removedNodes:n}=e[t];s(r,"c"),a(l.takeRecords()),s(n,"d")}},l=new MutationObserver(a);t.add(i);var u=(e,{connectedCallback:t,disconnectedCallback:r,observedAttributes:n,attributeChangedCallback:a})=>{i(c.takeRecords());const{a:s,c:u,d:d}=o.get(e)||(e=>{const t={a:{},c:new Set,d:new Set};return o.set(e,t),t})(e);return n&&(l.observe(e,{attributes:!0,attributeOldValue:!0,attributeFilter:n}),n.forEach(t=>{(s[t]||(s[t]=new Set)).add(a),e.hasAttribute(t)&&a.call(e,t,null,e.getAttribute(t))})),r&&d.add(r),t&&(u.add(t),e.ownerDocument.compareDocumentPosition(e)&e.DOCUMENT_POSITION_DISCONNECTED||t.call(e)),e};function d(e){e.call(this)}const h=[],f=[],b={},m=({addedNodes:e})=>{w(e)},w=e=>{f.forEach.call(e,E)};t.add(e=>{e.forEach(m)});const g=e=>{const t=f.indexOf(e);return t<0?void 0:h[t].o},E=e=>{f.forEach(S,e)},v=e=>{if(!(e in b)){let t,r=new p(e=>{t=e});b[e]={_:t,$:r}}return b[e].$},p="function"==typeof Promise?Promise:function(e){let t=[],r=!1;return e(()=>{r=!0,t.splice(0).forEach(n)}),{then:n,catch(){return this}};function n(e){return r?setTimeout(e):t.push(e),this}};function S(e,t){const{querySelectorAll:r}=this;if(r){if((this.matches||this.webkitMatchesSelector||this.msMatchesSelector).call(this,e)){const{m:e,o:r}=h[t];e.has(this)||e.set(u(this,r),0)}w(r.call(this,f))}}return e.Lie=p,e.define=(e,t)=>{if(g(e))throw new Error("duplicated: "+e);f.push(e),h.push({o:t,m:new WeakMap}),w(document.querySelectorAll(e)),v(e),b[e]._()},e.get=g,e.upgrade=E,e.whenDefined=v,e}({});
