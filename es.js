self.regularElements=function(e){"use strict";var t=(e,t)=>{const r=new WeakMap,o=new WeakMap,l=(e,t)=>{for(let n=0,{length:r}=e;n<r;n++){const{target:r,attributeName:l,oldValue:a}=e[n],c=r.getAttribute(l);o.get(t).call(r,l,a,c)}},a=(e,o,l,c)=>{for(let s=0,{length:u}=e;s<u;s++){const u=e[s];l.has(u)||!c&&!("querySelectorAll"in u)||(l.add(u),r.has(u)?r.get(u)[o].forEach(n,u):"c"===o&&t(u),a(u.querySelectorAll("*"),o,l,!0))}},c=e=>{for(let t=0,{length:n}=e;t<n;t++){const{addedNodes:n,removedNodes:r}=e[t];a(n,"c",new Set,!1),a(r,"d",new Set,!1)}},s=new MutationObserver(c);return s.observe(e,{childList:!0,subtree:!0}),(e,{connectedCallback:t,disconnectedCallback:n,observedAttributes:a,attributeChangedCallback:u})=>{c(s.takeRecords());const{c:i,d:d}=r.get(e)||(e=>{const t={c:new Set,d:new Set};return r.set(e,t),t})(e);if(a){const t=new MutationObserver(l);t.observe(e,{attributes:!0,attributeOldValue:!0,attributeFilter:a.map(t=>(e.hasAttribute(t)&&u.call(e,t,null,e.getAttribute(t)),t))}),o.set(t,u)}return n&&d.add(n),t&&(i.add(t),e.ownerDocument.compareDocumentPosition(e)&e.DOCUMENT_POSITION_DISCONNECTED||t.call(e)),e}};function n(e){e.call(this)}const r="function"==typeof Promise?Promise:function(e){let t=[],n=0;return e(()=>{n=1,t.splice(0).forEach(r)}),{then:r};function r(e){return n?setTimeout(e):t.push(e),this}};const o=[],l=[],a={},{get:c,upgrade:s,whenDefined:u,$:i,_:d}=((e,n,o,l,a)=>{const c=(e,t)=>{for(let n=0,{length:r}=e;n<r;n++)t.has(e[n])||(t.add(e[n]),s(e[n],t))},s=(e,t)=>{for(let t=0,{length:r}=n;t<r;t++)(e.matches||e.webkitMatchesSelector||e.msMatchesSelector).call(e,n[t])&&a(e,o[t]);t&&((e,t)=>{n.length&&c(e.querySelectorAll(n),t)})(e,t)};return{get:e=>{const t=n.indexOf(e);return t<0?void 0:o[t].o},upgrade:e=>{s(e,new Set)},whenDefined:e=>{if(!(e in l)){let t,n=new r(e=>{t=e});l[e]={_:t,$:n}}return l[e].$},$:c,_:t(e,s)}})(document,l,o,a,(e,{m:t,o:n})=>{t.has(e)||t.set(d(e,n),0)});return e.define=(e,t)=>{if(c(e))throw new Error("duplicated: "+e);l.push(e),o.push({o:t,m:new WeakMap}),i(document.querySelectorAll(e),new Set),u(e),a[e]._()},e.get=c,e.upgrade=s,e.whenDefined=u,e}({});
